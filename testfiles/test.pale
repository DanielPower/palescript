local player = {}:
	foo = 1
	bar = 12
	zoo = {}:
		far = 25
		boo = 15

-- This is a test
if something:
	foo %= bar
	local displayList = {}
	local displayInfo = sh.split(sh.command("xrandr")())
	for _, line in pairs(displayInfo):
		if string.find(line, " connected "):
			local _, _, name = string.find(line, "(%a+%-%d+) ")
			local _, _, width, height, x, y = string.find(line, "(%d+)x(%d+)+(%d+)+(%d+)")
			table.insert(displayList, {name, tonumber(x), tonumber(y), tonumber(width), tonumber(height)})
		elseif foo == bar:
			print("oop")

	return displayList

function parser.listSinks():
	local sinkList = {}
	local sinkInfo = sh.split(sh.command("pacmd", "list-sinks")())
	local index, id
	for _, line in pairs(sinkInfo):
		if string.find(line, "index: "):
			_, _, index = string.find(line, "index:%s(%d+)")
		if string.find(line, "alsa.id = "):
			_, _, id = string.find(line, 'alsa.id%s=%s"(.+)"')
		if index and id:
			table.insert(sinkList, {index, id})
			index, id = nil

	return sinkList

function parser.listSinkInputs():
	local sinkInputList = {}
	local sinkInputInfo = sh.split(sh.command("pacmd", "list-sink-inputs")())
	for _, line in pairs(sinkInputInfo):
		if string.find(line, "index: "):
			_, _, index = string.find(line, "index:%s(%d+)")
			table.insert(sinkInputList, {index})
		if string.find(line, "media.name = "):
			_, _, media = string.find(line, 'media.name%s=%s"(.+)"')
			sinkInputList[#sinkInputList][2] = media
		if string.find(line, "application.name = "):
			_, _, application = string.find(line, 'application.name%s=%s"(.+)"')
			sinkInputList[#sinkInputList][3] = application
		if string.find(line, "application.process.id = "):
			_, _, process = string.find(line, 'application.process.id%s=%s"(.+)"')
			sinkInputList[#sinkInputList][4] = process
		if string.find(line, "application.process.binary = "):
			_, _, binary = string.find(line, 'application.process.binary%s=%s"(.+)"')
			sinkInputList[#sinkInputList][5] = binary

	return sinkInputList

return parser
